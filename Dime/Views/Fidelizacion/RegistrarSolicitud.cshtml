@model Telmexla.Servicios.DIME.Entity.ViewModelRegistrarSolicitud
@{
    ViewBag.Title = "Crear Motivo de Cancelación";
    ViewBag.SubTitle = "Procesos Fidelización";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@using (Html.BeginForm("CrearMotivoCancelacion", "Fidelizacion", FormMethod.Post, new { id = "formCrearMotivos", role = "form" }))
{
    @Html.AntiForgeryToken()
    if (Session["Administracion Fidelizacion"] != null)
    {
        <div class="row">
            <div class="col-md-3"></div>
            <div class="col-md-6">
                <div class="box box-danger">
                    <div class="box-body">
                        <div class="col-md-12">
                            <small>Cuenta</small>
                            @Html.TextBoxFor(c => c.FidelizacionRegistro.Cuenta, null, new { @class = "form-control input-sm ", Id = "txtMotivo" })
                            @Html.ValidationMessageFor(c => c.FidelizacionRegistro.Cuenta, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-6">
                            <small>Motivo</small>
                            @Html.DropDownListFor(c => c.FidelizacionMotivos.Id, new SelectList(ViewBag.sltMotivos, "Id", "Motivo"), "-SELECCIONE-", new { Id = "sltMotivosCancelacion", @class = "form-control input-sm" })
                            @Html.ValidationMessageFor(c => c.FidelizacionMotivos.Id, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-6">
                            <small>Submotivo</small>
                            @Html.DropDownListFor(c => c.FidelizacionRegistro.SubmotivoId, new List<SelectListItem> { }, "-SELECCIONE-", new { Id = "sltSubmotivosCancelacion", @class = "form-control input-sm" })
                            @Html.ValidationMessageFor(c => c.FidelizacionRegistro.SubmotivoId, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-12" id="divEstrategias">
                            <div class="col-md-12" id="level_1">
                                <small>Estrategia</small>
                                @Html.DropDownListFor(c => c.FidelizacionRecursivaA.Id, new SelectList(ViewBag.slEstrategia, "Id", "Nombre"), "-SELECCIONE-", new { Id = "sltEstrategias", @class = "form-control input-sm", onchange = "getChild(this.value, 'label_1')" })
                                @Html.ValidationMessageFor(c => c.FidelizacionRecursivaA.Id, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        @*<div class="col-md-6">
                            <small>Submotivo</small>
                            @Html.TextBoxFor(c => c.FidelizacionRegistro.SubmotivoId, null, new { @class = "form-control input-sm ", Id = "txtMotivo" })
                            @Html.ValidationMessageFor(c => c.FidelizacionRegistro.SubmotivoId, "", new { @class = "text-danger" })
                        </div>*@
                        
                        @*<div class="col-md-12">
                            <small>Mostrar Otros Ofrecimientos</small>
                            @Html.DropDownListFor(m => m.OtrosOfrecimientos, new List<SelectListItem> { new SelectListItem { Text = "SI", Value = "1", Selected = true }, new SelectListItem { Text = "NO", Value = "0", Selected = false } }, new { Id = "sltOtrosOfrecimientos", @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.OtrosOfrecimientos, "", new { @class = "text-danger" })
                        </div>

                        <div class="col-md-12">
                            <small>Adjuntar Campos Adicionales</small>
                            @Html.DropDownListFor(m => m.OtrosCampos, new List<SelectListItem> { new SelectListItem { Text = "SI", Value = "1", Selected = true }, new SelectListItem { Text = "NO", Value = "0", Selected = false } }, new { Id = "sltOtrosCampos", @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.OtrosCampos, "", new { @class = "text-danger" })
                        </div>

                        <div class="col-md-12 text-center">
                            <button id="btnguardarpom" type="submit" class="btn btn-primary" name="Guardar" value="true">Guardar</button>
                        </div>*@

                        

                    </div>
                </div>
            </div>
            <div class="col-md-3"></div>
        </div>
    }
    else
    {
        <div class="row">

            <div class="box box-primary">

                <div class="box-body">

                    <div class="row">
                        <div class="col-md-12">
                            <div class="error-page">
                                <h2 class="headline text-red" style="margin-top:-18px;">502</h2>
                                <div class="error-content">
                                    <h3><i class="fa fa-warning text-red"></i> Oops! Acceso Denegado.</h3>
                                    <p style="text-align:justify;">
                                        La información que se relaciona en esta vista no es posible visualizarse ya que su perfil no posee el acceso necesario.
                                        Por favor solicite al administrador del sistema el acceso correspondiente.
                                    </p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
    @section Scripts{
        <script>
            var urlListaKendo = '@Url.Action("getSubmotivosPorMotivoJson", "Fidelizacion")';
            var urlGetChilds = '@Url.Action("getHijoRecursivaJson", "Fidelizacion")';
        </script>
        <script src="~/Scripts/Fidelizacion/RegistrarSolicitud.js?1.0.5"></script>
    }
}